<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xft.abscloud.manager.mapper.EquitySpendMapper" >
  <resultMap id="BaseResultMap" type="xft.abscloud.manager.pojo.EquitySpend" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="VARCHAR" />
    <result column="event_id" property="eventId" jdbcType="INTEGER" />
    <result column="equity_id" property="equityId" jdbcType="INTEGER" />
    <result column="equity_name" property="equityName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIME" />
    <result column="update_time" property="updateTime" jdbcType="TIME" />
  </resultMap>

  <!-- 新增 -->
  <insert id="add" parameterType="xft.abscloud.manager.pojo.EquitySpend" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert into abs_equity_spend(member_id,event_id,equity_id,equity_name,status,create_time
    )
    values(
      #{memberId},#{eventId},#{equityId},#{equityName},#{status},sysdate()
    )
  </insert>

  <!-- 更新：状态 -->
  <update id="updateStatus">
    update abs_equity_spend set status =#{status},update_time=sysdate()
      where id = #{id}
  </update>

  <!-- 查看活动的预约人员列表 -->
  <select id="queryListByEventId" parameterType="java.lang.Integer" resultType="java.util.Map">
    select
      s.id as spendId,
      s.member_id as memberId,
      u.account_name as accountName,
      s.event_id as eventId,
      s.equity_id as equityId,
      s.equity_name as equityName,
      s.status as status,
      s.create_time as createTime
    from abs_equity_spend s
    left join abs_member_user u on u.id = s.member_id
    where s.event_id = #{eventId} and s.status = '0'
  </select>

  <!-- 查看会员的消费记录 -->
  <select id="queryListByMemberId" parameterType="java.lang.String" resultType="java.util.Map">
    select
      s.id as spendId,
      s.member_id as memberId,
      u.account_name as accountName,
      s.event_id as eventId,
      e.event_name as eventName,
      s.equity_id as equityId,
      s.equity_name as equityName,
      s.status as status,
      s.create_time as createTime,
      s.update_time as updateTime
    from abs_equity_spend s
    left join abs_event e on s.event_id=e.id
    left join abs_member_user u on u.id = s.member_id
    where s.member_id = #{memberId}
  </select>

  <select id="queryByMemberIdAndEventId" resultMap="BaseResultMap">
    select * from abs_equity_spend
      where member_id = #{memberId} and event_id = #{eventId}
  </select>


</mapper>